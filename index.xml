<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nagymarci.hu</title><link>https://nagymarci.github.io/</link><description>Recent content on nagymarci.hu</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 16 Oct 2022 19:46:17 +0200</lastBuildDate><atom:link href="https://nagymarci.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Integration Tests in Go</title><link>https://nagymarci.github.io/posts/integration-tests-in-go/</link><pubDate>Sun, 16 Oct 2022 19:46:17 +0200</pubDate><guid>https://nagymarci.github.io/posts/integration-tests-in-go/</guid><description>&lt;p>In this piece of article I&amp;rsquo;m going to go through how to write extensive integration tests for our Go
applications. The purpose of this exercise is to be able to write integration tests without mocking
too much dependencies but also avoid connecting to other services, ie. remote servers, remote databases,
etc. Everything should exist locally on the host running the test, and the test should be able to setup
testing environment without external tools.&lt;/p></description></item></channel></rss>